---
title: |
  Only You:
  A Field Experiment of Text Message to Prevent Free-riding in Japan Marrow Donor Program
author:
  - name: Hiroki Kato
    affiliations:
      - 'Graduate School of Economics, Osaka University, Japan'
  - name: Fumio Ohtake
    affiliations:
      - 'Graduate School of Economics, Osaka University, Japan'
      - 'Center for Infectious Disease Education and Research (CiDER), Osaka University, Japan'
  - name: Saiko Kurosawa
    affiliations:
      - 'Department of Oncology, Ina Central Hospital, Japan'
  - name: Kazuhiro Yoshiuchi
    affiliations:
      - 'Graduate School of Medicine, Tokyo University, Japan'
  - name: Takahiro Fukuda
    affiliations:
      - 'Department of Hematopoietic Stem Cell Transplantation, National Cancer Center Hospital, Japan'
date: last-modified
date-format: '[Last Updated on] MMMM D, YYYY'
pdf-engine: lualatex
bibliography: biblio.bib
format:
  pdf:
    documentclass: bxjsarticle
    classoption:
      - pandoc
      - ja=standard
      - jafont=haranoaji
    papersize: a4
    fontsize: 11pt
    include-in-header:
      text: |
        \usepackage{authblk}
        \usepackage{siunitx}
        \usepackage{threeparttable, threeparttablex, multirow}
        \newcolumntype{d}{S[input-symbols = ()]}
        \usepackage{lscape}
    geometry:
      - top=30mm
      - left=30mm
      - right=30mm
      - bottom=30mm
    toc: false
    number-sections: true
    fig-format: pdf
    fig-pos: t
    template-partials:
      - tex/title.tex
  html:
    number-sections: true
    code-fold: true
    title-block-banner: true
  docx:
    number-sections: true
    toc: false
    fig-width: 15
    fig-height: 10
execute:
  echo: false
  warning: false
  error: false
  cache: false
  enabled: true
---

# Introduction {#sec-intro}

Allogenic stem cell transplantation is one of the treatments with the lowest recurrence rate for blood diseases such as leukemia. In this treatment method, (1) diseased cells and healthy hematopoietic stem cells are simultaneously killed by anticancer drugs and radiation, and (2) healthy hematopoietic stem cells donated by another person are transplanted. One requirement for bone marrow transplantation (hematopoietic stem cell transplantation) is that the donor's white blood cell type, called HLA, matches the patient's HLA.[^hapro] While the matching probability between two random people is less than 1%, the most likely HLA match is between siblings, with a probability of approximately 30%. The matching probability between parents and children is very low. If there is no matched donor among blood relatives, the patient must seek a donor from an unrelated person. In Japan, the patient generally seeks unrelated donors through the Japan Marrow Donor Program (JMDP). However, coordination by the JMDP results in a long transplant process, and only 60% of registered patients receive a transplant [@Hirakawa2018].

[^hapro]: Recently, transplants between blood relatives with semi-matched HLA, called haploidentical transplants, have become widespread. In addition, the transplantation of blood cells contained in the umbilical cord and placenta connecting mother and child (cord blood transplant) has also become popular. Unlike bone marrow transplants, cord blood transplants can be performed even without the requirement of a perfect HLA match.

There are two types of policies for the donor pool to increase patient survival. The first type is to increase the number of potential donors, which increases the matching probability. Compared to when the patient matches fewer than four donors, when the patient matches more than 200 donors, the patient's transplant rate increases from 45% to 74% [@Hirakawa2018]. However, while the number of potential donors for JMDP has roughly doubled between 2000 and 2015, the probability of first-time matching has only increased by about 5% [@Takanashi2016].[^reason] In other words, increasing the pool size would be ineffective because the marginal benefit of increasing the number of potential donors is small.

[^reason]: This is because the probability of a new member with a rare HLA type is low.

The second type is to increase the proportion of people in the donor pool who are less likely to refuse to donate. This type of measure contributes to the quality of the donor pool. @Hirakawa2018 shows that many coordinations are interrupted before their first step, the confirmatory typing, due to the donor side reasons (see the @sec-background section for the coordination flow). Therefore, creating a pool with many potential donors who are willing to donate would increase the transplant rate. The marginal benefit of measures that improve the quality of the donor pool should be higher than that of measures that increase the size of the donor pool.

Then, this study examines the effectiveness of information provision as one policy improving the quality of the donor pool. When a person registered with the JMDP becomes a potential donor for a patient, the potential donor receives a compatibility notice from the JMDP. The potential donors who respond to the notification by indicating a willingness to donate then take coordination for transplantation. We added a message to the compatibility notice based on information published by the JMDP and conducted a field experiment from September 2021 to February 2022 to test the effect of the added message. We asked the JMDP to provide data on the coordination process (including whether or not they responded to the notification and their willingness to donate) for those who received the compatibility notice during the experimental period and analyze the effect of providing information.

There are two intervention messages. One is information that there are few potential donors per patient registered in the JMDP. Stem cell donation through JMDP is a public good since multiple potential donors per patient take coordination simultaneously. Thus, potential donors have the incentive to free-ride. The first message prevents potential donors from free-riding behavior caused by the over-estimated expectation about the number of other ongoing potential donors. Another message is that only about half of the patients registered with the JMDP receive transplants. This information aims to increase the value of the altruistic behavior of stem cell donation. Our field experiment shows that information about the small number of potential donors per patient encourages young males to reply to the compatibility notice and indicate their willingness to donate.

<!-- この研究は日本に限らず他国の類似する骨髄バンクにおける施策へ貢献するものである。JMDPでは、若年男性の移植成績が良いにも関わらず、ドナー都合によるコーディネーションの中断率が高い[@Hirakawa2018]。同様の問題はXXXXでも生じている。我々のフィールド実験はこの問題を解決するための一つの施策を提示できる。

また、この研究は経済学における一連の公共財研究にも貢献している。標準的な経済学は、公共財は自身の努力とは無関係に便益を受けられるという性質を持つので、自身がコストをかけて努力するインセンティブがなく、ただ乗り行動が生じることを指摘している。 -->


```{r}
#| label: library
#| include: false
#| vscode: {languageId: r}

library(here)
library(tidyverse)
library(lubridate)
library(estimatr)
library(fixest)
library(grf)
library(modelsummary)
library(kableExtra)
library(flextable)
library(officer)
library(RCTtoolbox)
library(patchwork)
lapply(list.files(here("R/func"), "r", full.names = TRUE), source)

options(
  knitr.table.format = "markdown",
  kableExtra.auto_format = FALSE,
  modelsummary_stars_note = FALSE,
  modelsummary_factory_default = "flextable",
  modelsummary_factory_html = "kableExtra",
  modelsummary_factory_latex = "kableExtra",
  modelsummary_factory_word = "flextable"
)
```


```{r}
#| label: outcome-label
#| include: false
#| vscode: {languageId: r}

root <- "D:/JMDPフィールド実験"

outcome_label <- list(
  reply = "Reply",
  positive = "Positive intention",
  negative = "Negative intention",
  test = "CT",
  candidate = "Candidate",
  consent = "Consent",
  donate = "Donation"
)
```

# Field Experiment {#sec-experiment}
## Background: Coordination Process of JMDP {#sec-background}


To promote an understanding of the timing of interventions in our field experiment, we provide an overview of the coordination process leading up to the donation of stem cells by a potential donor registered with the JMDP. First, when a potential donor matches a patient registered with the JMDP, the JMDP office sends the potential donor the compatibility notice requesting stem cell donation.[^SNS] The potential donor responds to the notification by filling out a medical questionnaire and indicating the willingness to donate.

[^SNS]: JMDP also sends the potential donor an SMS message informing that the JMDP sends the compatibility notice.

After that, the coordination for the transplant starts. The potential donor undergoes the confirmatory typing within approximately one month. In this step, the coordinator explains in detail the donation procedure (bone marrow collection and peripheral blood stem cell collection) and investigates the intentions of the potential donor and family. At this time, the potential donor can choose the collection method. In addition, the coordinating physician conducts an interview, medical examination, and general blood tests to determine the presence of infection and blood type. These tests examine whether the potential donor meets the criteria set by the JMDP.

Patients can proceed with coordination with up to 10 potential donors at the same time. The patient's physician selects the most suitable candidate from potential donors who take the confirmatory typing. Importantly, the potential donor does not know how many other donors the matched patient coordinates with. Nor can a potential donor obtain this information from the coordinator or coordinating physician.

The candidate needs to make a final consent after receiving explanations from the coordinator and coordinating physician. At this time, a representative of the donor's family must also consent to the collection. In addition, the candidate cannot change his/her intention after that. After giving final consent, the first candidate is hospitalized for approximately one week to take preoperative testing and prepare for collection. After this, the donor undergoes a procedure to collect the stem cells. The time between the confirmation test and collection is approximately 3-4 months.

## Experimental Design

![Intervention Messages](image/intervention.png){#fig-intervention}

Our intervention is the content of the compatibility notice in which the JMDP requests stem cell donations from potential donors. The @fig-intervention shows our intervention. Before the intervention, the compatibility notice states that the potential donor should return within seven days indicating to donate and completing a medical questionnaire. One of the materials enclosed along with the notification is a handbook that describes the coordination process, which we overview in the previous subsection.

We added two messages to the compatibility notice to facilitate coordination (@fig-intervention).[^pressure] The probability message highlights the small number of potential donors per patient registered with the JMDP. This message prevents overestimation of beliefs about the number of other ongoing potential donors and may discourage free-riding behavior in stem cell donation.

[^pressure]: When having made intervention messages, we have taken appropriate care not to put undue pressure on potential donors. First, we avoid messages that sound like a plea. Second, we use only publicly available information from the JMDP. Third, we explain the risks of transplantation as usual.

The patient message emphasizes that only half of the patients can receive a transplant through the JMDP. This message aims to correct the perception that patients are saved without the cooperation and to stimulate altruism in potential donors. Furthermore, emphasizing the importance of shortening the coordination time encourages early replies to the compatibility notice.

We made four experimental arms to estimate the effects of the two intervention messages. Experimental arm A sends the standard compatibility notice without intervention messages (control group). Experimental arms B and C receive the probability message and the patient message, respectively. In addition, to test the negative effect of cognitive load due to information overload, we also made an experimental arm D adding two intervention messages to one compatibility notice.

```{r}
#| label: read-schedule-data
#| include: false
#| vscode: {languageId: r}

schedule <- read_csv(here(root, "RCT-schedule.csv")) %>%
  mutate(
    my = paste0(month, "/", year - 2000),
    my = factor(
      my,
      levels = c("9/21", "10/21", "11/21", "12/21", "1/22", "2/22"),
      labels = c("Sep 21", "Oct 21", "Nov 21", "Dec 21", "Jan 22", "Feb 22")
    ),
    week = factor(week, levels = 1:4, labels = paste("Week", 1:4))
  ) %>%
  dplyr::select(week, my, treat) %>%
  pivot_wider(values_from = treat, names_from = my)
```

```{r}
#| label: tbl-assignment
#| tbl-cap: Assignment Schedule
#| vscode: {languageId: r}

flextable(schedule) %>%
  align(j = -1, align = "center", part = "all") %>%
  padding(j=1:7, padding.top = 5, padding.bottom = 5, part="all") %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

Our experimental subjects are 11,154 potential donors to whom the JMDP sent the compatibility notice between September 2021 and February 2022. The assignment of experimental groups is cluster-randomized based on a week because we preserve as much randomness as feasible by the JMDP office. We assigned four experimental groups to balance on week and month to remove week/month fixed effects. We summarize the assignment schedule in @tbl-assignment.

## Data and Empirical Strategy

```{r}
#| label: read-experiment-data
#| include: false
#| vscode: {languageId: r}

rawdt <- read_csv(here(root, "shaped.csv"), locale = locale(encoding = "cp932"))

use <- rawdt %>%
  dplyr::filter(ongoing == 0) %>%
  mutate(
    treat = factor(treat, levels = LETTERS[1:4]),
    plan_two_methods = if_else(plan_method == "BM/PB", 1, 0)
  )
```

```{r}
#| label: balance-test-ongoing
#| eval: false
#| vscode: {languageId: r}

lm_robust(
  ongoing ~ treat,
  data = rawdt,
  cluster = RCTweek,
  se_type = "stata"
) %>%
{
  f <- summary(.)$fstatistic[1]
  numdf <- summary(.)$fstatistic[2]
  dendf <- summary(.)$fstatistic[3]
  p <- pf(f, numdf, dendf, lower.tail = FALSE)

  sprintf("F-value = %1.3f; p-value = %1.3f", f, p)
}
```

We received the coordination data maintained by the JMDP at the end of June 2022. The observation unit is the experimental subject. As individual attributes, the data record gender, age, number of past coordination, and region of residence (at the prefectural level). For the coordination process, the data records whether or not to reach each step (reply to the compatibility notice, the confirmatory typing, the candidate selection, the final consent, and the collection). We use these variables as outcome variables. In particular, for replies to the compatibility notice, the data additionally record the number of days of reply and the intention to donate. If the coordination was interrupted, the data record the reason for the interruption in three categories (patient reasons, reasons other than donor's health, and donor's health reasons). In analysis, we use 11,049 individuals who reside in Japan and whose coordination has been completed [^exclude].

[^exclude]: one person resided abroad. There were also 104 persons for whom coordination was in progress when we received the data. The proportion of people with ongoing coordination is well balanced across experimental arms (F-value, p-value = $0.956$).

As additional data, we use the list of hospitals published by the JMDP on its website. In addition to hospital addresses, this data includes whether bone marrow (BM) collection and peripheral blood stem cell (PBSC) collection are available. We aggregate this data at the prefectural level, calculate the number of hospitals per 10 square kilometers, and merge it and the coordination data using the prefecture as a merge key. We consider this variable as the traveling cost of coordination and donation.

```{r}
#| label: experiment-summary
#| include: false

summary_stat <- use %>%
  select(
    male,
    age,
    coordinate,
    hospital_per_area,
    PB_per_area,
    BM_per_area,
    treat
  ) %>%
  group_by(treat) %>%
  summarize_all(mean) %>%
  mutate_at(vars(-treat), list(~sprintf("%1.3f", .))) %>%
  pivot_longer(-treat, names_to = "vars", values_to = "mean") %>%
  pivot_wider(names_from = "treat", values_from = "mean")

balance_p <- use %>%
  select(
    male,
    age,
    coordinate,
    hospital_per_area,
    PB_per_area,
    BM_per_area,
    treat,
    RCTweek
  ) %>%
  pivot_longer(male:BM_per_area, values_to = "value", names_to = "vars") %>%
  group_by(vars) %>%
  do(est = lm_robust(
    value ~ treat,
    clusters = RCTweek,
    se_type = "stata",
    data = .
  )) %>%
  summarize(
    vars = vars,
    f = summary(est)$fstatistic[1],
    numdf = summary(est)$fstatistic[2],
    dendf = summary(est)$fstatistic[3],
    p = sprintf("%1.3f", pf(f, numdf, dendf, lower.tail = FALSE))
  ) %>%
  select(vars, p)

balance_test <- summary_stat %>%
  dplyr::left_join(balance_p, by = "vars") %>%
  mutate(type = "C. Balance Test") %>%
  mutate(vars = recode(
    vars,
    "male" = "Male (=1)",
    "age" = "Age",
    "coordinate" = "Number of past coordinations",
    "hospital_per_area" = "Number of listed hospitals",
    "PB_per_area" = "Number of hospitals listed with PBSC collection",
    "BM_per_area" = "Number of hospitals listed with BM collection"
  ))

size <- with(use, sprintf("%1d", table(treat))) %>%
  {
    tribble(
      ~vars, ~A, ~B, ~C, ~D, ~p, ~type,
      "Standard notification", "X", "X", "X", "X", "", "A. Interventions",
      "Probability message", "", "X", "", "X", "", "A. Interventions",
      "Patients message", "", "", "X", "X", "", "A. Interventions",
      "N", .[1], .[2], .[3], .[4], "", "B. Sample Size"
    )
  }

tbl_experiment_summary <- bind_rows(size, balance_test)
```

```{r}
#| label: tbl-experiment-summary
#| tbl-cap: Overview of Field Experiment
#| output: asis
#| vscode: {languageId: r}

tbl_experiment_summary %>%
  rename(`F-test, p-value` = p) %>%
  as_grouped_data("type") %>%
  as_flextable(hide_grouplabel = TRUE) %>%
  add_header_row(values = c("", "Experimental Arms", ""), colwidths = c(1, 4, 1)) %>%
  align(j = -1, align = "center", part = "all") %>%
  padding(j=1:6, padding.top=5, padding.bottom = 5, part = "all") %>%
  padding(2:4, padding.left = 10) %>%
  padding(6, padding.left = 10) %>%
  padding(8:13, padding.left = 10) %>%
  width(j = 1, 2) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

@tbl-experiment-summary summarizes the field experiments. Panel A shows the interventions for each experimental group, and Panel B shows the sample size for each experimental group. Panel C shows the balance test, which examines whether the randomization is successful. Since most covariates are well-balanced across groups, the clustered assignment is approximately random. However, potential donors in experimental groups C and D may be younger than those in experimental groups A and B (F-test, p-value = $0.067$).

Since potential donors cannot choose the experimental group, i.e., the experimental group is exogenous, a simple difference in means can identify the average treatment effect. However, this leads to bias because age and the number of weeks and months of the assignment are not perfectly balanced across experimental groups. Therefore, in addition to the difference-in-mean test, we estimate the following linear probability model for individual $i$ who received the compatibility notice in a week $w$ of month $m$.

$$
  Y_{imw} =
  \beta_1 \cdot \text{B}_{mw} + \beta_2 \cdot \text{C}_{mw}
  + \beta_3 \cdot \text{D}_{mw}
  + X'_i \gamma + \lambda_m + \theta_w + u_{imw},
$$

where $X_i$ is the individual attribute vector and $\lambda_m$ and $\theta_w$ are the week and month dummy variables, respectively. We use standard errors clustered at the experimental week level, a unit of randomization.

# Experimental Results {#sec-result}

```{r}
#| label: balance-test-exogeneous-stop-reply
#| eval: false

lm_robust(
  exg_stop_reply ~ treat,
  data = use,
  cluster = RCTweek,
  se_type = "stata"
) %>%
{
  f <- summary(.)$fstatistic[1]
  numdf <- summary(.)$fstatistic[2]
  dendf <- summary(.)$fstatistic[3]
  p <- pf(f, numdf, dendf, lower.tail = FALSE)

  sprintf("F-value = %1.3f; p-value = %1.3f", f, p)
}
```

```{r}
#| label: create-stock-data
#| include: false
#| vscode: {languageId: r}

stock <- use %>%
  dplyr::filter(exg_stop_reply == 0) %>%
  rename(positive = intention) %>%
  mutate(
    negative = reply * (1 - positive),
    age_demean = age - mean(rawdt$age),
  ) %>%
  select(reply, positive, negative, everything()) %>%
  pivot_longer(reply:negative, names_to = "outcome") %>%
  mutate(outcome = factor(
    outcome,
    levels = unlist(names(outcome_label)[1:3]),
    labels = unlist(outcome_label[1:3])
  ))
```

## Effects on Reply and Intention {#sec-reply}

To begin, we estimate the effect of our interventions on reply, which is the most likely manifestation of the potential donor's intention. The outcome variable for replying is a dummy variable that takes one if the potential donor replies to the compatibility notice regardless of donor intention. We decompose the message effect on response to the notification into two parts. The first is the effect on replying with a positive intention. For estimation, the outcome variable is a dummy variable that takes one if the potential donor replied to the notice and indicated the willingness to donate. The second is the effect on replying with a negative intention. The outcome variable is a dummy variable that takes one if the potential donor replied to the notice and did not indicate the willingness to donate. When estimating these effects, we include non-responders in the sample, coding their outcomes as 0. Since the sum of the two outcome variables for the intention to donate is always equal to the dummy variable for the reply, the sum of the effects on the positive and negative intentions is always the effect on replying. The response rate is $88.35$% in the control arm. The proportion of replying with positive intention is $55.33$%, while the proportion of replying with negative intention is $33.03$% in the control arm. Thus, $62.63$% of potential donors who replied to the compatibility notice were willing to donate.

The coordination may be interrupted by the patient before potential donors reply. Since this case occurs independently of the potential donor's intention, we exclude it from the sample in our analysis. We exclude $0.5$--$0.7$% of each experimental group, and the proportions are well balanced across groups (F-test, p-value=$0.242$).

```{r}
#| label: est-full-reply
#| include: false

mod <- list(
  unctrl = value ~ treat,
  ctrl = value ~ treat + age_demean + I(age_demean^2) + male + coordinate +
    hospital_per_area + PB_per_area + BM_per_area +
    factor(prefecture) + factor(month) + factor(week)
)

est_stock <- stock %>%
  group_by(outcome) %>%
  nest() %>%
  mutate(
    fit1 = map(
      data,
      ~ lm_robust(
        mod$unctrl,
        data = .,
        cluster = RCTweek,
        se_type = "stata"
      )
    ),
    fit2 = map(
      data,
      ~ lm_robust(
        mod$ctrl,
        data = .,
        cluster = RCTweek,
        se_type = "stata"
      )
    )
  ) %>%
  pivot_longer(
    fit1:fit2,
    names_prefix = "fit",
    names_to = "model",
    values_to = "fit"
  )

ctrl_avg <- stock %>%
  dplyr::filter(treat == "A") %>%
  group_by(outcome) %>%
  summarize(mean = sprintf("%1.4f", mean(value)))

add_table <- tibble::tribble(
  ~term, ~"(1)", ~"(2)", ~"(3)", ~"(4)", ~"(5)", ~"(6)",
  "Control average", ctrl_avg$mean[1], ctrl_avg$mean[1],
  ctrl_avg$mean[2], ctrl_avg$mean[2],
  ctrl_avg$mean[3], ctrl_avg$mean[3],
  "Covariates", "", "X", "", "X", "", "X"
)

attr(add_table, "position") <- 9:12

tbl_est_stock <- est_stock %>%
  pull(fit) %>%
  setNames(paste0("(", seq_len(length(.)), ")")) %>%
  modelsummary(
    coef_map = c(
      "(Intercept)" = "Constant",
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    stars = c("***" = .01, "**" = .05, "*" = .1),
    fmt = 4,
    gof_omit = "R2|AIC|BIC|Log|Std|FE|se_type",
    add_rows = add_table,
  )
```

```{r}
#| label: tbl-full-reply
#| tbl-cap: Linear Probability Model of Replay and Intention
#| vscode: {languageId: r}

tbl_est_stock %>%
  add_header_row(
    values = c("", "Reply", "Positive", "Negative"),
    colwidths = c(1, 2, 2, 2)
  ) %>%
  add_header_row(
    values = c("", "Intention"),
    colwidths = c(3, 4)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  add_footer_lines(paste(
    "Notes: * p < 0.1, ** p < 0.05, *** p < 0.01.",
    "Standard errors clustered by experimental weeks",
    "are reported in parentheses.",
    "Covariates are gender, squared polynomial of (demeaned) age,",
    "number of past coordinations,",
    "number of hospitals per 10 square kilometers,",
    "number of hospitals with PBSC collection per 10 square kilometers,",
    "number of hospitals with BM collection per 10 square kilometers,",
    "prefecture dummies, month dummies, and week dummies."
  )) %>%
  width(j = 1, 1) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
  # kableExtra::kable_styling() %>%
  # kableExtra::add_header_above(c(
  #   " " = 1, "Reply" = 2, "Positive" = 2, "Negative" = 2
  # )) %>%
  # kableExtra::add_header_above(c(
  #   " " = 3, "Intention" = 4
  # )) %>%
  # kableExtra::footnote(
  #   paste(
      # "* p < 0.1, ** p < 0.05, *** p < 0.01.",
      # "Standard errors clustered by experimental weeks",
      # "are reported in parentheses.",
      # "Covariates are gender, squared polynomial of (demeaned) age,",
      # "number of past coordinations,",
      # "number of hospitals per 10 square kilometers,",
      # "number of hospitals with PBSC collection per 10 square kilometers,",
      # "number of hospitals with BM collection per 10 square kilometers,",
      # "prefecture dummies, month dummies, and week dummies."
  #   ),
  #   threeparttable = TRUE
  # )
```

@tbl-full-reply are the estimation results of the linear probability model. Odd columns use only the experimental arm dummies as an explanatory variable, whereas even columns additionally control for individual attributes and month and week fixed effects. Column (1) shows that the experimental arm B, which sends the probability message, increases the reply rate by 1 percentage point or $1.2$%. Controlling for individual attributes and other factors (column (2)) does not significantly change the size of the effect, but it is statistically significant at the 5% level. This effect stems from an increase in replies with positive intentions. Columns (3) and (5) show that experimental arm B increases the replay rate with positive intentions by 2 percentage points or $3.94$% while it decreases the reply rate with negative intentions by 1  percentage point or $3.42$%. Their statistical significance is weak. In addition, experimental arms C and D have smaller effect sizes than experimental arm B and are statistically non-significant. We estimated a logit model as a robustness analysis (@full-reply-logit). The results are consistent with the above table for the direction of the effect but are statistically non-significant. In sum, our intervention has an insignificant impact on replies overall.

```{r}
#| label: est-subsample-reply
#| include: false

est_stock_sub <- stock %>%
  mutate(age_less30 = if_else(age < 30, 1, 0)) %>%
    group_by(outcome, male, age_less30) %>%
    nest() %>%
    mutate(est = map(data, ~ lm_robust(
      update(mod$ctrl, . ~ . - male - age_demean),
      cluster = RCTweek,
      se_type = "stata",
      data = .x
    )))

plotdt_stock_sub <- est_stock_sub %>%
  mutate(
    fit = map(est, tidy),
    fit = map(fit, ~ subset(.x, str_detect(term, "treat"))),
    fit = map(fit, ~ dplyr::select(.x, -outcome)),
    N = map_chr(est, ~ paste("N =", nobs(.x))),
    mean = map_dbl(data, ~ with(subset(., treat == "A"), mean(value))),
    mean = sprintf("Control avg = %1.3f", mean)
  ) %>%
  select(-data, -est) %>%
  unnest(cols = fit) %>%
  mutate(
    pos = paste0(male, age_less30),
    pos = factor(
      pos,
      levels = c("01", "00", "11", "10"),
      labels = c(
        "Female\u00d7\nAge<30",
        "Female\u00d7\n30\u2264Age",
        "Male\u00d7\nAge<30",
        "Male\u00d7\n30\u2264Age"
      )
    ),
    term = str_replace(term, "treat", ""),
    term = factor(term, LETTERS[2:4])
  )

text <- plotdt_stock_sub %>%
  select(male, age_less30, pos, N, mean) %>%
  distinct()
```

```{r}
#| label: fig-subsample-reply
#| fig-cap: 'Effect on Reply and Intentions by Gender and Age Group. Note: These plots show the average effect (and associated 95% confidential interval) on each outcome by gender and age group. We cluster standard errors by experimental weeks. We control number of past coordinations, number of hospitals per 10 square kilometers, number of hospitals with PBSC collection per 10 square kilometers, number of hospitals with BM collection per 10 square kilometers, prefecture dummies, month dummies, and week dummies.'
#| vscode: {languageId: r}

plot_list <- unique(plotdt_stock_sub$outcome) %>%
  purrr::map(function(x) {
    subset(plotdt_stock_sub, outcome == x) %>%
      ggplot(aes(x = pos, y = estimate)) +
      geom_hline(aes(yintercept = 0), linetype = 2) +
      geom_point(
        aes(color = term, shape = term),
        size = 3, position = position_dodge(0.5)
      ) +
      geom_errorbar(
        aes(ymin = conf.low, ymax = conf.high, color = term),
        position = position_dodge(0.5),
        width = 0
      ) +
      geom_text(
        aes(y = -0.125, label = N),
        data = subset(text, outcome == x),
        color = "black"
      ) +
      geom_text(
        aes(y = -0.15, label = mean),
        data = subset(text, outcome == x),
        color = "black"
      ) +
      scale_y_continuous(
        breaks = seq(-0.2, 0.2, by = 0.05), limits = c(-0.17, 0.17)
      ) +
      labs(
        title = paste("Outcome:", x),
        x = "Subset",
        y = "Estimated Effects (95%CI)",
        color = "Treatment", shape = "Treatment"
      ) +
      simplegg()
  })

wrap_plots(plot_list, ncol = 2) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")
```

Next, to test the heterogeneity of message effects, we divide the sample into four subsets by gender and age group (less than 30 or not) and estimate the message effects in each sub-group. @fig-subsample-reply is the coefficient plot. The results show that experimental groups B and D, which add at least the probability message, increase the reply rate for young males by 6 percentage points or $8.06$% (the baseline reply rate is $74.4$%).

The effect of experimental arm B with the addition of only probability messages results from an increase in the reply rate with positive intention. Among males under 30, experimental arm B increases the reply rate with positive intention by 10 percentage points or $25.91$% (baseline rate of $38.6$%) but decreases the reply rate with negative intention by 3 percentage points or $8.38$% (baseline rate of $35.8$%). These are statistically significant effects. On the other hand, experimental group D, which adds the probability and patient messages, increases the reply rate with positive and negative intentions by the same amount. In particular, experimental arm D increases the reply rate with negative intention by 3 percentage points or $8.38$%, which is statistically significant.

Among the other gender and age groups (especially men and women over 30), our intervention has no significant effect on replies or intentions. However, among women under 30, experimental group D reduces the reply rate with positive intention by $5$ percentage points or $9.69$%. Thus, the message that potential donors per patient are few increases young men's willingness to donate and encourages them to reply to the compatibility notice. Given that young male donors have lower donation intentions than the other gender-age group despite their better transplant outcomes, the probability message improves the efficiency of transplant coordination.

## Robustness to Heterogenous Effect {#sec-robustness}

We perform robust checks of the heterogeneity of message effects. First, we compute p-values using the wild cluster bootstrap method [@Cameron2008]. When the number of clusters is small, the cluster standard errors over-reject the null hypothesis. To correct this, we use the wild cluster bootstrap method. @tbl-young-reply in Appendix is estimation results, restricting the sample to women under 30 (columns (1)--(3)) and men under 30 (columns (4)--(6)). The results show that even with the wild bootstrap method, the probability message (experimental arm B) increases the reply rate with positive intentions among males under 30.

```{r}
#| label: est-int-rcf
#| include: false

covariate <- ~ 0 + male + age + coordinate + hospital_per_area +
  PB_per_area + BM_per_area

Y <- use$intention
X <- model.matrix(covariate, data = use)
W <- use$treat
G <- use$RCTweek

int_rcf <- multi_arm_causal_forest(X, Y, W)
int_tau <- predict(int_rcf, X)
```

```{r}
#| label: fig-int-rcf
#| fig-cap: Distribution of Individual Treatment Effects on Intention Estimated by Random Causal Forest.

predict_int_rcf <- data.frame(X) %>%
  cbind(int_tau$predictions) %>%
  rename(
    effect_B = `B - A.Y.1`,
    effect_C = `C - A.Y.1`,
    effect_D = `D - A.Y.1`
  ) %>%
  pivot_longer(
    effect_B:effect_D,
    names_to = c(".value", "treat"),
    names_sep = "_"
  ) %>%
  mutate(
    treat = factor(treat, labels = paste("Message", LETTERS[2:4])),
    age_less30 = if_else(age < 30, 1, 0),
    pos = paste0(male, age_less30),
    pos = factor(
      pos,
      levels = c("01", "00", "11", "10"),
      labels = c(
        "Female\u00d7\nAge<30",
        "Female\u00d7\n30\u2264Age",
        "Male\u00d7\nAge<30",
        "Male\u00d7\n30\u2264Age"
      )
    )
  )

predict_int_rcf %>%
  ggplot(aes(x = effect, y = after_stat(count) / sum(after_stat(count)))) +
  geom_histogram(
    aes(fill = effect > 0),
    breaks = seq(-.2, .2, by = .01),
    color = "black"
  ) +
  scale_fill_manual(values = c("white", "red")) +
  facet_grid(treat~pos) +
  labs(
    x = "Treatment effects",
    y = "Fraction"
  ) +
  simplegg() +
  theme(legend.position = "none")
```

```{r}
#| label: est-int-rcf-cate
#| include: false

subset_cond <- list(
  X[, "male"] == 0 & X[, "age"] < 30,
  X[, "male"] == 0 & X[, "age"] >= 30,
  X[, "male"] == 1 & X[, "age"] < 30,
  X[, "male"] == 1 & X[, "age"] >= 30
)

ate_int_rcf <- subset_cond %>%
  purrr::map(~ average_treatment_effect(int_rcf, subset = .)) %>%
  reduce(bind_rows) %>%
  mutate(
    z = abs(estimate / std.err),
    p = 2 * pnorm(z, lower.tail = FALSE),
    gender = rep(c("Females", "Males"), each = 6),
    age = rep(c("Young", "Elder", "Young", "Elder"), each = 3)
  )

tbl_int_rcf <- ate_int_rcf %>%
  select(gender, age, contrast, estimate, std.err, p) %>%
  pivot_wider(names_from = gender, values_from = estimate:p) %>%
  select(age, contrast, ends_with("Females"), ends_with("Males")) %>%
  mutate(contrast = str_extract(contrast, "[B-D]"))
```

```{r}
#| label: tbl-int-rcf-cate
#| tbl-cap: Conditional Average Treatment Effect Estimated by RCF.

tbl_int_rcf %>%
  mutate(age = recode(
    age,
    "Young" = "Age: Less than 30",
    "Elder" = "Age: More than or equal to 30"
  )) %>%
  as_grouped_data("age") %>%
  as_flextable(hide_grouplabel = TRUE) %>%
  set_header_labels(
    contrast = "",
    estimate_Females = "Estimate",
    std.err_Females = "S.E.",
    p_Females = "P-value",
    estimate_Males = "Estimate",
    std.err_Males = "S.E.",
    p_Males = "P-value"
  ) %>%
  add_header_row(values = c("", "Females", "Males"), colwidths = c(1, 3, 3)) %>%
  align(j = -1, align = "center", part = "all") %>%
  colformat_double(j = -1, digits = 3) %>%
  padding(j=1:7, padding.top = 5, padding.bottom = 5, part = "all") %>%
  padding(2:4, padding.left = 10) %>%
  padding(6:8, padding.left = 10) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

We then test for heterogenous effects by random causal forest [@Davis2017; @Athey2019]. This method divides the sample by combinations of covariates and estimates treatment effects within each subsample. This yields predicted values of individual treatment effects, which is a function of the covariates given by the researcher. The combination of covariates creating subsamples is determined to minimize the mean squared error of the estimated heterogeneous treatment effect. This minimization is equivalent to maximizing the variance of the estimated treatment effect [@Athey2016].

@fig-int-rcf-cate is the distribution of the predicted treatment effect of each experimental arm on replies with positive intention. Notably, 90% of men under 30 respond positively to the probability message. The random causal forest shows that the average treatment effect of experimental arm B among young males is $12.5$ percentage points, which is statistically significant (@tbl-int-rcf-cate). The estimated treatment effect is almost consistent with the estimates obtained in @fig-subsample-reply.

We also confirm that our intervention has a statistically non-significant effect for the other gender-age groups. This result is because there exist roughly equal numbers of people who react positively and negatively to the intervention. Then, what characteristics make people more likely to have a positive response? We examined the differences in average personal attributes of those who are positively affected and those who are not within each gender-age group (@tbl-covariate-int-rcf). In the group of men and women over 30, those who are older and have more past coordination experience are more likely to respond positively to the intervention message. In the group of women over 30, those with more hospitals were more likely to react positively to the intervention message. On the other hand, in the group of men over 30 years old, those with fewer hospitals were more likely to respond positively to the intervention message. In the group of women under 30, younger people were more likely to respond positively to the intervention message. Moreover, those with more previous coordination experience are more likely to respond positively to experimental arms C and D, and those with more hospitals are more likely to respond positively to intervention group D.

```{r}
#| label: est-correlation-int-rcf
#| include: false
#| eval: false

int_tau_pred <- int_tau$predictions[, , 1]

est_tau_corr1 <- subset_cond %>%
  purrr::map(~ lm_robust(
    int_tau_pred[., 3] ~ int_tau_pred[., 1] + int_tau_pred[., 2],
    se_type = "HC0"
  ))

int_tau_pred_abs <- abs(int_tau$predictions[, , 1])
est_tau_corr2 <- subset_cond %>%
  purrr::map(~ lm_robust(
    int_tau_pred_abs[., 3] ~ int_tau_pred_abs[., 1] + int_tau_pred_abs[., 2],
    se_type = "HC0"
  ))

tbl_tau_corr <- list(est_tau_corr1, est_tau_corr2) %>%
  flatten() %>%
  setNames(paste0("(", seq_len(length(.)), ")")) %>%
  modelsummary(
    coef_map = c(
      "(Intercept)" = "Constant",
      "int_tau_pred[., 1]" = "Predicted effect of B",
      "int_tau_pred[., 2]" = "Predicted effect of C",
      "int_tau_pred_abs[., 1]" = "Abosulte of predicted effect of B",
      "int_tau_pred_abs[., 2]" = "Abosulte of predicted effect of C"
    ),
    stars = c("***" = .01, "**" = .05, "*" = .1),
    fmt = 4,
    gof_omit = "R2|AIC|BIC|Log|Std|FE|se_type|RMSE"
  )
```

```{r}
#| label: tbl-correlation-int-rcf
#| tbl-cap: Correlation of Predicted Tratment Effects
#| eval: false

tbl_tau_corr %>%
  add_header_row(
    values = c("", rep(c("Age<30", "30\u2264Age", "Age<30", "30\u2264Age"), 2))
  ) %>%
  add_header_row(
    values = c("", rep(c("Females", "Males"), 2)),
    colwidths = c(1, 2, 2, 2, 2)
  ) %>%
  add_header_row(
    values = c("", "Predicted effect of D", "Absolute of predicted effect of D"),
    colwidths = c(1, 4, 4)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  add_footer_lines(paste(
    "Notes: * p < 0.1, ** p < 0.05, *** p < 0.01.",
    "Robust standard errors are reported in parentheses."
  )) %>%
  width(j = 1, 1) %>%
  fontsize(size = 9, part = "all") %>%
  ft_theme()
```

## Response Speed to Notification

```{r}
speed <- stock %>%
  dplyr::filter(outcome == "Reply" & value == 1) %>%
  {
    list(
      "full" = .,
      "Young female" = subset(., male == 0 & age <= 30),
      "Elder female" = subset(., male == 0 & age > 30),
      "Young male" = subset(., male == 1 & age <= 30),
      "Elder male" = subset(., male == 1 & age > 30)
    )
  }

speed %>%
  lapply(function(d) {
    lm_robust(
      days_reply ~ treat + age_demean + I(age_demean^2) + male + coordinate +
        hospital_per_area + PB_per_area + BM_per_area +
        factor(prefecture) + factor(month) + factor(week),
      se_type = "stata",
      cluster = RCTweek,
      data = d
    )
  }) %>%
  modelsummary(
    coef_map = c(
      "treatB" = "Treat B",
      "treatC" = "Treat C",
      "treatD" = "Treat D"
    ),
    stars = c("***" = 0.01, "**" = 0.05, "*" = 0.1),
    output = "kableExtra"
  )

```


```{r}
#| label: create-flow-data
#| include: false
#| vscode: {languageId: r}

flow <- stock %>%
  mutate(
    days_reply = if_else(is.na(days_reply), 10000, days_reply),
    days4 = if_else(days_reply <= 4, value, 0),
    days7 = if_else(days_reply <= 7, value, 0),
    days10 = if_else(days_reply <= 10, value, 0),
    days14 = if_else(days_reply <= 14, value, 0),
    days21 = if_else(days_reply <= 21, value, 0),
    days28 = if_else(days_reply <= 28, value, 0)
  ) %>%
  select(-value) %>%
  pivot_longer(days4:days28, names_to = "within", names_prefix = "days") %>%
  mutate(within = as.numeric(within))
```

Since our data include the number of reply days, we examine the effect over time and estimate the effect on the probability $\text{Pr}(D_{imw} \le d)$, which is a probability of replying within $d$ days, in a linear probability model. In this model, the outcome variable is a dummy taking one if the potential donor replied to the compatibility notice within $d$ days. If the value of $d$ is sufficiently large, the effect on $\text{Pr}(D_{imw} \le d)$ is consistent with the effect on replies shown in the previous subsection. Also, as in the previous subsection, we decompose the effect on $\text{Pr}(D_{imw} \le d)$ into two effects in terms of the donor's intention. For positive intention, the outcome is a dummy variable taking one if the potential donor replied within $d$ days and indicated the intention to donate. For negative intention, the outcome variable is a dummy variable that takes one if the potential donor replied within $d$ days and did not indicate the intention to donate. 

```{r}
#| label: est-subsample-speed
#| include: false
#| vscode: {languageId: r}

est_flow_sub <- flow %>%
  mutate(age_less30 = if_else(age < 30, 1, 0)) %>%
  dplyr::filter(age_less30 == 1) %>%
  group_by(outcome, within, male) %>%
  nest() %>%
  mutate(
    fit = map(data, ~ lm_robust(
      update(mod$ctrl, . ~ . - male - age_demean),
      cluster = RCTweek,
      se_type = "stata",
      data = .x
    )),
    avg = map_chr(data, ~ sprintf(
      "%1d\n(%1.3f)", within, with(subset(.x, treat == "A"), mean(value))
    ))
  ) %>%
  mutate(
    tidy = map(fit, tidy),
    tidy = map(tidy, ~ subset(.x, str_detect(term, "treat"))),
    tidy = map(tidy, ~ dplyr::select(.x, -outcome))
  ) %>%
  dplyr::select(-data, -fit) %>%
  unnest(cols = tidy) %>%
  mutate(
    term = str_replace(term, "treat", ""),
    term = factor(term, LETTERS[2:4])
  )

est_flow_sub
```

```{r}
#| label: fig-young-male-speed
#| fig-cap: 'Effect on Reply within Specific Days after Sending Notification among Males Less than 30. Notes: These plots show the average effect (and associated 95% confidential interval) on each outcome.'
#| vscode: {languageId: r}

plot_list_male <- unique(est_flow_sub$outcome) %>%
  purrr::map(function(x) {
    subset(est_flow_sub, male == 1 & outcome == x) %>%
      ggplot(aes(x = within, y = estimate, color = term, shape = term)) +
      geom_hline(aes(yintercept = 0), linetype = 2) +
      geom_point(size = 3, position = position_dodge(2)) +
      geom_errorbar(
        aes(ymin = conf.low, ymax = conf.high),
        position = position_dodge(2),
        width = 0
      ) +
      scale_x_continuous(
        breaks = subset(est_flow_sub, male == 1 & outcome == x)$within,
        labels = subset(est_flow_sub, male == 1 & outcome == x)$avg
      ) +
      scale_y_continuous(
        breaks = seq(-0.2, 0.2, by = 0.05), limits = c(-0.1, 0.2)
      ) +
      labs(
        title = paste("Outcome:", x),
        x = "Days after sending notification\n(Control average)",
        y = "Estimated Effects (95%CI)",
        color = "Treatment", shape = "Treatment"
      ) +
      simplegg()
  })

wrap_plots(plot_list_male, ncol = 2) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")
```


Since the effects of our intervention messages are heterogeneous, we also focus on heterogeneity in this subsection. @fig-young-male-speed restricts the sample to men under 30. The JMDP specifies seven days as a suggested reply time in the compatibility notice. In the control group of this subsample, 21% of potential donors replied within seven days. The earlier the reply date, the more likely it is that those who replied to the notification are willing to donate. For example, 68% of those who responded within four days wanted to donate, and 51% of those who responded within 28 days had the willingness to donate. In other words, the slower a potential donor replies, the less likely a potential donor is to be willing to donate.

In this gender-age group, we have already found that experimental arm B, which added only the probability message, increases the reply rate with positive intention. This effect is primarily due to the behavior of potential donors who take longer than 10 days to reply. Experimental arm B does not have statistically significant effects on the reply rate within 10 days and the reply rate with positive intentions. Experimental arm B has statistically significant effects on the reply rate within 14--28 days and the reply rate with positive intentions. In addition, a notable result is that experimental arm B reduces the probability of replying with negative intentions within 7--10 days.

```{r}
#| label: fig-young-female-speed
#| fig-cap: 'Effect on Reply within Specific Days after Sending Notification among Females Less than 30. Notes: These plots show the average effect (and associated 95% confidential interval) on each outcome.'
#| vscode: {languageId: r}

plot_list_female <- unique(est_flow_sub$outcome) %>%
  purrr::map(function(x) {
    subset(est_flow_sub, male == 0 & outcome == x) %>%
      ggplot(aes(x = within, y = estimate, color = term, shape = term)) +
      geom_hline(aes(yintercept = 0), linetype = 2) +
      geom_point(size = 3, position = position_dodge(2)) +
      geom_errorbar(
        aes(ymin = conf.low, ymax = conf.high),
        position = position_dodge(2),
        width = 0
      ) +
      scale_x_continuous(
        breaks = subset(est_flow_sub, male == 0 & outcome == x)$within,
        labels = subset(est_flow_sub, male == 0 & outcome == x)$avg
      ) +
      scale_y_continuous(
        breaks = seq(-0.2, 0.2, by = 0.05), limits = c(-0.2, 0.2)
      ) +
      labs(
        title = paste("Outcome:", x),
        x = "Days after sending notification\n(Control average)",
        y = "Estimated Effects (95%CI)",
        color = "Treatment", shape = "Treatment"
      ) +
      simplegg()
  })

wrap_plots(plot_list_female, ncol = 2) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")
```

@fig-young-female-speed restricts the sample to women under 30. We already found that experimental arm C, adding only the patient information, has no statistically significant effect on the overall reply rate and intention. However, when focusing on short-term behavior, experimental arm C statistically significantly increases the reply rate within four days and the reply rate within 10--28 days by 5 percentage points. The positive effect on the reply rate within 4 days results from equal increases in positive and negative intentions. However, the positive effect on the reply rate within 10--29 days is mainly due to an increase in reply rate with a negative intention. However, the statistical significance of the effect of arm C on intentions is weak. Surprisingly, experimental group B, which is effective for young men, reduced the positive intention and the reply rate within 7--14 days.

## Effects on the Coordination Process {#sec-process}

```{r}
#| label: create-coordination-data
#| include: false
#| vscode: {languageId: r}

exclude <- use %>%
  select(id, starts_with("exg_stop")) %>%
  pivot_longer(
    -id,
    names_to = "outcome", values_to = "exclude",
    names_prefix = "exg_stop_"
  )

coordination <- use %>%
  select(test, candidate, consent, donate, everything()) %>%
  pivot_longer(test:donate, names_to = "outcome") %>%
  dplyr::left_join(exclude, by = c("id", "outcome")) %>%
  mutate(
    age_demean = age - mean(rawdt$age),
    outcome = factor(
      outcome,
      levels = unlist(names(outcome_label)[4:7]),
      labels = unlist(outcome_label[4:7])
    )
  )
```

Finally, we examine the impact on each step in the coordination process after replying to the compatibility notice. As explained in @sec-process, the coordination process has four stages: confirmatory typing (CT), candidate selection, final consent, and donation. We use as an outcome variable a dummy variable taking one if a potential donor has reached each step. Also, as in the analysis in @sec-reply, we exclude samples that are likely to have been terminated independently of the potential donor's intentions. When estimating the effect on CT, we exclude cases of interruptions due to the patient. Since the patient's physician can select the healthiest potential donor as a candidate at the candidate selection stage, when estimating the effect on the process after candidate selection, we exclude cases of interruptions due to the donor's health reasons or patient. However, we must be careful in interpreting the effect on the process after candidate selection, since sample exclusion may not completely remove the physician's decision. In the control group, 23% of potential donors took CT, 8% of potential donors became candidates, and 6% of potential donors ultimately donated.

```{r}
#| label: est-full-coordination
#| include: false

est_coordination <- coordination %>%
  group_by(outcome) %>%
  nest() %>%
  mutate(
    fit1 = map(
      data,
      ~ lm_robust(
        mod$unctrl,
        data = subset(., exclude == 0),
        cluster = RCTweek,
        se_type = "stata"
      )
    ),
    fit2 = map(
      data,
      ~ lm_robust(
        mod$ctrl,
        data = subset(., exclude == 0),
        cluster = RCTweek,
        se_type = "stata"
      )
    ),
    avg = map_chr(
      data,
      ~ with(
        subset(., exclude == 0 & treat == "A"),
        sprintf("%.4f", mean(value))
      )
    )
  ) %>%
  pivot_longer(
    fit1:fit2,
    names_prefix = "fit",
    names_to = "model",
    values_to = "fit"
  ) %>%
  select(- data)

add_table <- c("Control average", est_coordination$avg) %>%
  rbind(c("Covariates", "", "X", "", "X", "", "X", "", "X")) %>%
  data.frame()

attr(add_table, "position") <- c(9, 10)

tbl_est_coordination <- est_coordination %>%
  pull(fit) %>%
  modelsummary(
    coef_map = c(
      "(Intercept)" = "Constant",
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    stars = c("***" = .01, "**" = .05, "*" = .1),
    fmt = 4,
    gof_omit = "R2|AIC|BIC|Log|Std|FE|se_type",
    add_rows = add_table
  )
```

```{r}
#| label: tbl-full-coordination
#| tbl-cap: Linear Probability Model of Coordination Process.
#| output: asis
#| vscode: {languageId: r}

tbl_est_coordination %>%
  add_header_row(
    values = c("", "CT", "Candidate", "Consent", "Donation"),
    colwidths = c(1, 2, 2, 2, 2)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  add_footer_lines(paste(
    "Notes: * p < 0.1, ** p < 0.05, *** p < 0.01.",
    "Standard errors clustered by experimental weeks",
    "are reported in parentheses.",
    "Covariates are gender, squared polynomial of (demeaned) age,",
    "number of past coordinations,",
    "number of hospitals per 10 square kilometers,",
    "number of hospitals with PBSC collection per 10 square kilometers,",
    "number of hospitals with BM collection per 10 square kilometers,",
    "prefecture dummies, month dummies, and week dummies."
  )) %>%
  width(j = 1, 1) %>%
  fontsize(size = 9, part = "all") %>%
  ft_theme()
  # kableExtra::kable_styling() %>%
  # kableExtra::add_header_above(c(
  #   " " = 1, "CT" = 2, "Candidate" = 2, "Consent" = 2, "Donation" = 2
  # )) %>%
  # kableExtra::footnote(
  #   paste(
  #     "* p < 0.1, ** p < 0.05, *** p < 0.01.",
  #     "Standard errors clustered by experimental weeks",
  #     "are reported in parentheses.",
  #     "Covariates are gender, squared polynomial of (demeaned) age,",
  #     "number of past coordinations,",
  #     "number of hospitals per 10 square kilometers,",
  #     "number of hospitals with PBSC collection per 10 square kilometers,",
  #     "number of hospitals with BM collection per 10 square kilometers,",
  #     "prefecture dummies, month dummies, and week dummies."
  #   ),
  #   threeparttable = TRUE
  # )
```

@tbl-tbl-full-coordination is the estimated result of the linear probability model. The results show that experimental arm B, adding only the probability message, increases the probability of reaching the CT by 3 percentage points or 13%, which is statistically significant. Controlling for covariates, experimental arm D, adding both the probability message and the patient message, also increases the probability of taking the CT by 3 percentage points or 13%, which is statistically significant. The results so far are also obtained by estimating with a logit model [@tbl-full-coordination-logit]. Experimental arm D also increases the probability of candidate selection and reaching a final consent, which is weakly statistically significant and is not statistically significant in the estimation with the logit model.

```{r}
#| label: est-subsample-coordination
#| include: false
#| vscode: {languageId: r}

est_coordination_sub <- coordination %>%
  mutate(age_less30 = if_else(age < 30, 1, 0)) %>%
  group_by(outcome, male, age_less30) %>%
  nest() %>%
  mutate(est = map(data, ~ lm_robust(
    update(mod$ctrl, . ~ . - male - age_demean),
    cluster = RCTweek,
    se_type = "stata",
    data = subset(.x, exclude == 0)
  )))

pdt_coordination_sub <- est_coordination_sub %>%
  mutate(
    fit = map(est, tidy),
    fit = map(fit, ~ subset(.x, str_detect(term, "treat"))),
    fit = map(fit, ~ dplyr::select(.x, -outcome)),
    N = map_chr(est, ~ paste("N =", nobs(.x))),
    mean = map_dbl(data, ~ with(subset(., exclude == 0 & treat == "A"), mean(value))),
    mean = sprintf("Control avg = %1.3f", mean)
  ) %>%
  select(-data, -est) %>%
  unnest(cols = fit) %>%
  mutate(
    pos = paste0(male, age_less30),
    pos = factor(
      pos,
      levels = c("01", "00", "11", "10"),
      labels = c(
        "Female\u00d7\nAge<30",
        "Female\u00d7\n30\u2264Age",
        "Male\u00d7\nAge<30",
        "Male\u00d7\n30\u2264Age"
      )
    ),
    term = str_replace(term, "treat", ""),
    term = factor(term, LETTERS[2:4])
  )

text <- pdt_coordination_sub %>%
  ungroup() %>%
  select(male, age_less30, pos, N, mean, outcome) %>%
  distinct()
```

```{r}
#| label: fig-subsample-coordination
#| fig-cap: 'Effect on Coordination by Gender and Age Group. Note: These plots show the average effect (and associated 95% confidential interval) on each outcome by gender and age group. We cluster standard errors by experimental weeks. We control number of past coordinations, number of hospitals per 10 square kilometers, number of hospitals with PBSC collection per 10 square kilometers, number of hospitals with BM collection per 10 square kilometers, prefecture dummies, month dummies, and week dummies.'
#| vscode: {languageId: r}

plot_list <- unique(pdt_coordination_sub$outcome) %>%
  purrr::map(function(x) {
    subset(pdt_coordination_sub, outcome == x) %>%
      ggplot(aes(x = pos, y = estimate)) +
      geom_hline(aes(yintercept = 0), linetype = 2) +
      geom_point(
        aes(color = term, shape = term),
        size = 3, position = position_dodge(0.5)
      ) +
      geom_errorbar(
        aes(ymin = conf.low, ymax = conf.high, color = term),
        position = position_dodge(0.5),
        width = 0
      ) +
      geom_text(
        aes(y = -0.1, label = N),
        data = subset(text, outcome == x),
        color = "black"
      ) +
      geom_text(
        aes(y = -0.125, label = mean),
        data = subset(text, outcome == x),
        color = "black"
      ) +
      scale_y_continuous(
        breaks = seq(-0.2, 0.2, by = 0.05), limits = c(-0.15, 0.2)
      ) +
      labs(
        title = paste("Outcome:", x),
        x = "Subset",
        y = "Estimated Effects (95%CI)",
        color = "Treatment", shape = "Treatment"
      ) +
      simplegg()
  })

wrap_plots(plot_list, ncol = 2) +
  plot_layout(guides = "collect") &
  theme(legend.position = "bottom")
```

@fig-subsample-coordination is a coefficient plot of the subsample analysis divided by gender and age. The results show that experimental arm B increases the probability of taking the CT for males under age 30. Surprisingly, this experimental arm also statistically significantly increases the donation probability for this gender-age group. However, we have not been able to distinguish whether this is an effect of potential donor intent or simply reflects the tendency of patient physicians to select younger men with better transplant records. Furthermore, when computing p-values using the wild cluster bootstrap method, we cannot reject the null hypothesis for a positive effect of experimental arm B. Thus, these results are not robust. Experimental arm B also statistically significantly increases the probability of CT for men over 30 years old. Experimental arm D statistically significantly increases the probability of CT for men and women over 30 years old.

```{r}
#| label: est-donate-rcf
#| include: false
#| eval: false

donate <- subset(coordination, outcome == "Donation")
Y <- donate$value
X <- model.matrix(covariate, data = donate)
W <- donate$treat
G <- donate$RCTweek

donate_rcf <- multi_arm_causal_forest(X, Y, W)
donate_tau <- predict(donate_rcf, X)
```

```{r}
#| label: fig-donate-rcf
#| fig-cap: Distribution of Individual Treatment Effects on Donation Estimated by Random Causal Forest.
#| eval: false

predict_donate_rcf <- data.frame(X) %>%
  cbind(donate_tau$predictions) %>%
  rename(
    effect_B = `B - A.Y.1`,
    effect_C = `C - A.Y.1`,
    effect_D = `D - A.Y.1`
  ) %>%
  pivot_longer(
    effect_B:effect_D,
    names_to = c(".value", "treat"),
    names_sep = "_"
  ) %>%
  mutate(
    treat = factor(treat, labels = paste("Message", LETTERS[2:4])),
    age_less30 = if_else(age < 30, 1, 0),
    pos = paste0(male, age_less30),
    pos = factor(
      pos,
      levels = c("01", "00", "11", "10"),
      labels = c(
        "Female\u00d7\nAge<30",
        "Female\u00d7\n30\u2264Age",
        "Male\u00d7\nAge<30",
        "Male\u00d7\n30\u2264Age"
      )
    )
  )

predict_donate_rcf %>%
  ggplot(aes(x = effect, y = after_stat(count) / sum(after_stat(count)))) +
  geom_histogram(
    aes(fill = effect > 0),
    breaks = seq(-.2, .2, by = .01),
    color = "black"
  ) +
  scale_fill_manual(values = c("white", "red")) +
  facet_grid(treat~pos) +
  labs(
    x = "Treatment effects",
    y = "Fraction"
  ) +
  simplegg() +
  theme(legend.position = "none")
```

```{r}
#| label: est-donate-rcf-cate
#| include: false
#| eval: false

subset_cond <- list(
  X[, "male"] == 1 & X[, "age"] < 30,
  X[, "male"] == 0 & X[, "age"] < 30,
  X[, "male"] == 1 & X[, "age"] >= 30,
  X[, "male"] == 0 & X[, "age"] >= 30
)

ate_donate_rcf <- subset_cond %>%
  purrr::map(~ average_treatment_effect(donate_rcf, subset = .)) %>%
  reduce(bind_rows) %>%
  mutate(
    z = abs(estimate / std.err),
    p = 2 * pnorm(z, lower.tail = FALSE),
    gender = rep(c("Males", "Females", "Males", "Females"), each = 3),
    age = rep(c("Young", "Elder"), each = 6)
  )

tbl_donate_rcf <- ate_donate_rcf %>%
  select(gender, age, contrast, estimate, std.err, p) %>%
  pivot_wider(names_from = gender, values_from = estimate:p) %>%
  select(age, contrast, ends_with("Females"), ends_with("Males")) %>%
  mutate(contrast = str_extract(contrast, "[B-D]"))
```

```{r}
#| label: tbl-donate-rcf-cate
#| tbl-cap: Conditional Average Treatment Effect Estimated by RCF.
#| eval: false

tbl_donate_rcf %>%
  mutate(age = recode(
    age,
    "Young" = "Age: Less than 30",
    "Elder" = "Age: More than or equal to 30"
  )) %>%
  as_grouped_data("age") %>%
  as_flextable(hide_grouplabel = TRUE) %>%
  set_header_labels(
    contrast = "",
    estimate_Females = "Estimate",
    std.err_Females = "S.E.",
    p_Females = "P-value",
    estimate_Males = "Estimate",
    std.err_Males = "S.E.",
    p_Males = "P-value"
  ) %>%
  add_header_row(values = c("", "Females", "Males"), colwidths = c(1, 3, 3)) %>%
  align(j = -1, align = "center", part = "all") %>%
  colformat_double(j = -1, digits = 3) %>%
  padding(j=1:7, padding.top = 5, padding.bottom = 5, part = "all") %>%
  padding(2:4, padding.left = 10) %>%
  padding(6:8, padding.left = 10) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

# Discussion {#sec-discussion}

我々は返信の意思決定に関する意思決定モデルを構築し、情報提供介入のメカニズムを整理する。ドナー候補者は0期から$T$期の間にいつ返信をするのかを決める。ある$t$期の効用は$U(t) = b\delta_b^t - c\delta_c^t$とし、ここで$b$と$c$はそれぞれ提供の（期待）価値とコストである。また、$\delta_b$と$\delta_c$は時間割引因子であり、提供価値と提供コストで異なることを許容する。また、すべての期で$U(t)$が負となるとき、ドナー候補者は適合通知に返信しない[^negative]。この節では、理論モデルから得られる示唆のみを提示し、詳細な導出を補論に示す。

[^negative]: 単純化のために、この意思決定モデルは返信する人が必ず提供意向を持っていることを暗に仮定している。

```{r}
#| label: fig-theory-simulation
#| fig-cap: Simulation of Optimal Response Speed 

optT <- function(b, db, dc = 0.6, c = 10, T = 10) {
  if (db <= dc) {
    if (b < c) return(NA) else return(0)
  } else {
    if (b < (dc / db)^T) return(NA)
    tstar <- (log(c/b) + log(log(dc)/log(db))) / log(db/dc)
    if (tstar <= 0) return(0)
    if (tstar >= T) return(T)
    return(tstar)
  }
}

sim_data <- expand.grid(
  b = seq(0.0001, 20, length.out = 100),
  db = seq(0.0001, 0.9999, length.out = 100)
)

optim_data <- sim_data %>%
  rowwise() %>%
  mutate(optimum = optT(b, db)) %>%
  ungroup()

optim_data %>%
  ggplot(aes(x = db, y = b, fill = optimum))+
    geom_raster() +
    scale_fill_gradient(high = "#132B43", low = "#d2e9fa", na.value = NA) +
    labs(
      x = expression(paste("Time disount factor with donation value", "(", delta[b], ")")),
      y = expression(paste("Donation value", "(", b, ")")),
      fill = "Optimal response speed"
    ) +
    simplegg() +
    theme(panel.grid.major.y = element_blank())
```

理論モデルの結果は以下のようにまとめられる。第一に、提供価値$b$が低いドナー候補者は返信しないことを選択するのが最適である。返信の有無を決める提供価値の基準は時間割引因子$\delta_b$に依存する。$\delta_b$の値が十分に高い（$\delta_b > \delta_c$）、すなわち「いつでも助けられる」と考える人について提供価値の基準は$\delta_b$の値が低い（$\delta_b \le \delta_c$）、すなわち「今でないと助けられない」と考える人よりも低い。第二に、「今でないと助けられない」と考える人の最適行動は返信しないか、すぐに返信するのどちらかである。第三に、「いつでも助けられる」と考える人の最適な返信時期は提供価値・コスト・二つの時間割引因子に依存する。とくに、提供価値の増加は返信時期を早める。また、提供価値が十分に高い（$b > c$）とき、提供価値の時間割引因子の上昇は返信時期を遅くする。@fig-theory-simulation は$T = 10$、$\delta_c = 0.6$、$c = 10$としたときの最適な返信時期を示したヒートマップであり、以上の三つの結果を視覚的に示している。

我々の介入は情報提供を通じて提供価値（$b$）と提供価値の時間割引因子（$\delta_b$）を変える。確率メッセージは幹細胞提供の公共財の性質によって生じるただ乗り行動ができないことを強調することによって提供価値を高めている。また、利他メッセージは患者の半数しか移植を受けられないことを強調することによって提供価値を高めている。さらに、利他メッセージは早い返信が患者の生存確率に寄与することを強調することで提供価値の時間割引因子を下げている。すなわち、利他メッセージは提供価値を高めると同時に、その価値の経時的な減衰の程度も高めている。

したがって、意思決定モデルは確率メッセージが返信行動を促進するだけでなく、その時期も早めていることを示唆している。確率メッセージは若年男性の返信率と返信時の提供意向を高めている。したがって、若年男性の多くは「今でないと助けられない」考えており（$\delta_b < \delta_c$）、その価値を小さく見積もっている（$c > b$）と考えられる。もしそうであれば、理論モデルより、確率メッセージは若年男性が未返信から即時返信へと行動を変えていると考えられる。事実、限界的であるもの、確率メッセージは若年男性について4日以内の返信率を高めている。

一方で、利他メッセージは提供価値を高めるとともに、提供価値の時間割引因子を下げているので、返信行動を促す効果と返信行動を阻害する効果が混在している。利他メッセージは若年女性の返信行動を統計的に有意な影響を与えていない。したがって、若年女性の多くは提供価値を低く見積もっている可能性がある。もしそうであれば、利他メッセージは割引因子減少によって「いつでも助けられる」と考えている若年女性の返信行動を阻害している一方で、提供価値増加によって「今でないと助けられない」と考えている若年女性の即時返信を促進している。したがって、総合的に、利他メッセージは若年女性の返信行動に影響を与えていないのだろう。また、利他メッセージは若年女性の4日以内の返信を促進しており、平均的な返信日数も縮めている。これは利他メッセージが若年女性の即時返信を促している可能性の証左となる。

<!-- //TODO メッセージDについての議論を加える -->

# Conclusion {#sec-conclusion}

Our field experiment revealed that adding information to the compatibility notice, which informs that becoming a potential donor, affects the donor's willingness to donate. In particular, the information that there were fewer potential donors per patient increases the willingness of young men to donate. Examining why the effects were heterogeneous is a topic for future work.

# Appendix {-}

```{r}
#| label: est-full-reply-logit
#| include: false

est_stock_logit <- stock %>%
  group_by(outcome) %>%
  nest() %>%
  mutate(
    fit1 = map(
      data,
      ~ glm(mod$unctrl, data = ., family = binomial())
    ),
    fit2 = map(
      data,
      ~ glm( mod$ctrl, data = ., family = binomial())
    )
  ) %>%
  pivot_longer(
    fit1:fit2,
    names_prefix = "fit",
    names_to = "model",
    values_to = "fit"
  )

add_tables <- tibble::tribble(
  ~term, ~"(1)", ~"(2)", ~"(3)", ~"(4)", ~"(5)", ~"(6)",
  "Covariates", "", "X", "", "X", "", "X"
)

attr(add_tables, "position") <- 7


tidy_custom.glm <- function(x, ...) {
  tbl <- tidy(x) %>%
    mutate(
      or = exp(estimate),
      lower.or = exp(estimate - 1.96 * std.error),
      upper.or = exp(estimate + 1.96 * std.error)
    )

  tbl
}

tbl_stock_logit <- est_stock_logit %>%
  pull(fit) %>%
  setNames(paste0("(", seq_len(length(.)), ")")) %>%
  modelsummary(
    estimate = "{or}",
    statistic = "[{lower.or}, {upper.or}]",
    coef_map = c(
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    add_rows = add_tables,
    gof_omit = "R2|AIC|BIC|RMSE|Std|FE|se_type",
    fmt = fmt_sprintf("%.3f")
  )
```

```{r}
#| label: tbl-full-reply-logit
#| tbl-cap: Logit Model of Reply and Intention

tbl_stock_logit %>%
  flextable::add_header_row(
    values = c("", "Reply", "Positive", "Negative"),
    colwidths = c(1, 2, 2, 2)
  ) %>%
  flextable::add_header_row(
    values = c("", "Intention"),
    colwidths = c(3, 4)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  width(j = 1, 1) %>%
  fontsize(size = 9, part = "all") %>%
  ft_theme()
```

```{r}
#| label: est-full-coordination-logit
#| include: false

est_coordination_logit <- coordination %>%
  group_by(outcome) %>%
  nest() %>%
  mutate(
    fit1 = map(
      data,
      ~ glm(mod$unctrl, data = subset(., exclude == 0), family = binomial())
    ),
    fit2 = map(
      data,
      ~ glm(mod$ctrl, data = subset(., exclude == 0), family = binomial())
    )
  ) %>%
  pivot_longer(
    fit1:fit2,
    names_prefix = "fit",
    names_to = "model",
    values_to = "fit"
  )

add_tables <- tibble::tribble(
  ~term, ~mod1, ~mod2, ~mod3, ~mod4, ~mod5, ~mod6, ~mod7, ~mod8,
  "Covariates", "", "X", "", "X", "", "X", "", "X"
)

attr(add_tables, "position") <- 7

tbl_coordination_logit <- est_coordination_logit %>%
  pull(fit) %>%
  setNames(paste0("(", seq_len(length(.)), ")")) %>%
  modelsummary(
    estimate = "{or}",
    statistic = "[{lower.or}, {upper.or}]",
    coef_map = c(
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    add_rows = add_tables,
    gof_omit = "R2|AIC|BIC|RMSE|Std|FE|se_type",
    fmt = fmt_sprintf("%.3f")
  )
```

```{r}
#| label: tbl-full-coordination-logit
#| tbl-cap: Logit Model of Coordination

tbl_coordination_logit %>%
  flextable::add_header_row(
    values = c("", "CT", "Candidate", "Consent", "Donation"),
    colwidths = c(1, 2, 2, 2, 2)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  width(j = 1, 1) %>%
  fontsize(size = 9, part = "all") %>%
  ft_theme()
```

<!-- Wild clustered bootstrap -->

```{r}
#| label: est-wildbs-young-reply
#| include: false

ate_bs <- stock %>%
  dplyr::filter(age < 30) %>%
  group_by(outcome, male) %>%
  nest() %>%
  mutate(
    treatB = map_dbl(data, ~ wildBS(
      update(mod$ctrl, . ~ . - male - age_demean),
      data = .x,
      cluster = RCTweek,
      H0 = "treatB = 0",
      B = 1000
    )),
    treatD = map_dbl(data, ~ wildBS(
      update(mod$ctrl, . ~ . - male - age_demean),
      data = .x,
      cluster = RCTweek,
      H0 = "treatD = 0",
      B = 1000
    ))
  )

tbl_stock_sub <- est_stock_sub %>%
  dplyr::filter(age_less30 == 1) %>%
  pull(est) %>%
  modelsummary(
    coef_map = c(
      "(Intercept)" = "Constant",
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    stars = c("***" = .01, "**" = .05, "*" = .1),
    fmt = 4,
    gof_omit = "R2|AIC|BIC|Log|Std|FE|se_type",
    add_rows = data.frame(rbind(
      c("Covariates", rep("X", 6)),
      c("B = 0", sprintf("%1.3f", ate_bs$treatB)),
      c("D = 0", sprintf("%1.3f", ate_bs$treatD))
    ))
  )
```

```{r}
#| label: tbl-wildbs-young-reply
#| tbl-cap: Linear Probability Model of Reply and Intentions among Young Males and Females

tbl_stock_sub %>%
  align(j = -1, align = "center", part = "all") %>%
  add_header_row(
    values = c("", "Reply", "Positive", "Negative", "Reply", "Positive", "Negative")
  ) %>%
  add_header_row(
    values = c("", "Young females", "Young males"),
    colwidths = c(1, 3, 3)
  ) %>%
  width(j=1, 1) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

```{r}
#| label: est-wildbs-young-male-coordinate
#| include: false

ate_bs_coordination <- coordination %>%
  dplyr::filter(age < 30 & male == 1) %>%
  group_by(outcome) %>%
  nest() %>%
  mutate(
    treatB = map_dbl(data, ~ wildBS(
      update(mod$ctrl, . ~ . - male - age_demean),
      data = .x,
      cluster = RCTweek,
      H0 = "treatB = 0",
      B = 1000
    ))
  )

tbl_coordination_sub <- est_coordination_sub %>%
  dplyr::filter(age_less30 == 1 & male == 1) %>%
  pull(est) %>%
  modelsummary(
    coef_map = c(
      "(Intercept)" = "Constant",
      "treatB" = "Treatment B",
      "treatC" = "Treatment C",
      "treatD" = "Treatment D"
    ),
    stars = c("***" = .01, "**" = .05, "*" = .1),
    fmt = 4,
    gof_omit = "R2|AIC|BIC|Log|Std|FE|se_type",
    add_rows = data.frame(rbind(
      c("Covariates", rep("X", 4)),
      c("B = 0", sprintf("%1.3f", ate_bs_coordination$treatB))
    ))
  )
```

```{r}
#| label: tbl-wildbs-young-male-coordinate
#| tbl-cap: Linear Probability Model of Coordination among Young Males

tbl_coordination_sub %>%
  align(j = -1, align = "center", part = "all") %>%
  add_header_row(
    values = c("", "CT", "Candidate", "Consent", "Donation")
  ) %>%
  fontsize(size = 9, part = "all")  %>%
  width(j=1, 1) %>%
  ft_theme()
```

<!-- RCF -->

```{r}
#| label: est-t-test-covariate-int-rcf
#| include: false

cov_int_rcf <- predict_int_rcf %>%
  mutate(positive = if_else(effect > 0, 1, 0)) %>%
  select(age:BM_per_area, positive, pos, treat) %>%
  pivot_longer(age:BM_per_area, values_to = "value", names_to = "covariate") %>%
  group_by(pos, covariate, treat) %>%
  nest() %>%
  mutate(
    fit = map(data, ~ t.test(value ~ positive, data = .)),
    mean0 = map_dbl(fit, ~ .$estimate[1]),
    mean1 = map_dbl(fit, ~ .$estimate[2]),
    p = map_dbl(fit, ~ .$p.value)
  ) %>%
  select(-data, -fit) %>%
  pivot_wider(names_from = "treat", values_from = mean0:p) %>%
  select(pos, covariate, ends_with("B"), ends_with("C"), ends_with("D")) %>%
  arrange(pos)
```

```{r}
#| label: tbl-t-test-covariate-int-rcf
#| tbl-cap: Balance Test of Covariates Grouped By Predicted Treatment Effect

cov_int_rcf %>%
  as_grouped_data("pos") %>%
  as_flextable(hide_grouplabel = TRUE) %>%
  set_header_labels(
    covariate = "",
    "mean0_Message B" = "Negative",
    "mean1_Message B" = "Positive",
    "p_Message B" = "P-value",
    "mean0_Message C" = "Negative",
    "mean1_Message C" = "Positive",
    "p_Message C" = "P-value",
    "mean0_Message D" = "Negative",
    "mean1_Message D" = "Positive",
    "p_Message D" = "P-value"
  ) %>%
  add_header_row(
    values = c("", "Message B", "Message C", "Message D"),
    colwidths = c(1, 3, 3, 3)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  colformat_double(j = -1, digits = 2) %>%
  padding(j=1:10, padding.top = 5, padding.bottom = 5, part="all") %>%
  padding(2:6, j = 1, padding.left = 10) %>%
  padding(8:12, j = 1, padding.left = 10) %>%
  padding(14:18, j = 1, padding.left = 10) %>%
  padding(20:24, j = 1, padding.left = 10) %>%
  width(j = -1, 0.7) %>%
  width(j = 1, 1.27) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

```{r}
#| label: est-t-test-covariate-donate-rcf
#| include: false
#| eval: false

cov_donate_rcf <- predict_donate_rcf %>%
  mutate(positive = if_else(effect > 0, 1, 0)) %>%
  select(age:BM_per_area, positive, pos, treat) %>%
  pivot_longer(age:BM_per_area, values_to = "value", names_to = "covariate") %>%
  group_by(pos, covariate, treat) %>%
  nest() %>%
  mutate(
    fit = map(data, ~ t.test(value ~ positive, data = .)),
    mean0 = map_dbl(fit, ~ .$estimate[1]),
    mean1 = map_dbl(fit, ~ .$estimate[2]),
    p = map_dbl(fit, ~ .$p.value)
  ) %>%
  select(-data, -fit) %>%
  pivot_wider(names_from = "treat", values_from = mean0:p) %>%
  select(pos, covariate, ends_with("B"), ends_with("C"), ends_with("D")) %>%
  arrange(pos)
```

```{r}
#| label: tbl-t-test-covariate-donate-rcf
#| tbl-cap: Balance Test of Covariates Grouped By Predicted Treatment Effect (Donation)
#| eval: false

cov_donate_rcf %>%
  as_grouped_data("pos") %>%
  as_flextable(hide_grouplabel = TRUE) %>%
  set_header_labels(
    covariate = "",
    "mean0_Message B" = "Negative",
    "mean1_Message B" = "Positive",
    "p_Message B" = "P-value",
    "mean0_Message C" = "Negative",
    "mean1_Message C" = "Positive",
    "p_Message C" = "P-value",
    "mean0_Message D" = "Negative",
    "mean1_Message D" = "Positive",
    "p_Message D" = "P-value"
  ) %>%
  add_header_row(
    values = c("", "Message B", "Message C", "Message D"),
    colwidths = c(1, 3, 3, 3)
  ) %>%
  align(j = -1, align = "center", part = "all") %>%
  colformat_double(j = -1, digits = 2) %>%
  padding(j=1:10, padding.top = 5, padding.bottom = 5, part="all") %>%
  padding(2:6, j = 1, padding.left = 10) %>%
  padding(8:12, j = 1, padding.left = 10) %>%
  padding(14:18, j = 1, padding.left = 10) %>%
  padding(20:24, j = 1, padding.left = 10) %>%
  width(j = -1, 0.7) %>%
  width(j = 1, 1.27) %>%
  fontsize(size = 9, part = "all")  %>%
  ft_theme()
```

# References {-}